ARM GAS  C:\PROGRA~1\KMSpico\temp\ccLfaRtv.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB132:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  C:\PROGRA~1\KMSpico\temp\ccLfaRtv.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** /* USER CODE END PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PM */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE BEGIN PV */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/main.c **** void SystemClock_Config(void);
  49:Core/Src/main.c **** static void MX_GPIO_Init(void);
  50:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PFP */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  55:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END 0 */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /**
  60:Core/Src/main.c ****   * @brief  The application entry point.
  61:Core/Src/main.c ****   * @retval int
  62:Core/Src/main.c ****   */
  63:Core/Src/main.c **** int main(void)
  64:Core/Src/main.c **** {
  65:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c ****   /* USER CODE END 1 */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  72:Core/Src/main.c ****   HAL_Init();
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* USER CODE END Init */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* Configure the system clock */
  79:Core/Src/main.c ****   SystemClock_Config();
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE END SysInit */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* Initialize all configured peripherals */
  86:Core/Src/main.c ****   MX_GPIO_Init();
  87:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  88:Core/Src/main.c **** 
ARM GAS  C:\PROGRA~1\KMSpico\temp\ccLfaRtv.s 			page 3


  89:Core/Src/main.c ****   /* USER CODE END 2 */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Infinite loop */
  92:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  93:Core/Src/main.c ****   while (1)
  94:Core/Src/main.c ****   {
  95:Core/Src/main.c ****     /* USER CODE END WHILE */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
  98:Core/Src/main.c ****     if (HAL_GPIO_ReadPin(SW1_GPIO_Port,SW1_Pin)){
  99:Core/Src/main.c ****       HAL_GPIO_TogglePin(LD1R_GPIO_Port, LD1R_Pin);
 100:Core/Src/main.c ****     }
 101:Core/Src/main.c ****   }
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE END 3 */
 104:Core/Src/main.c **** }
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** /**
 107:Core/Src/main.c ****   * @brief System Clock Configuration
 108:Core/Src/main.c ****   * @retval None
 109:Core/Src/main.c ****   */
 110:Core/Src/main.c **** void SystemClock_Config(void)
 111:Core/Src/main.c **** {
 112:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 113:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 116:Core/Src/main.c ****   */
 117:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 118:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 119:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 120:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 121:Core/Src/main.c ****   */
 122:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 124:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 126:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 127:Core/Src/main.c ****   {
 128:Core/Src/main.c ****     Error_Handler();
 129:Core/Src/main.c ****   }
 130:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 131:Core/Src/main.c ****   */
 132:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 133:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 134:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 135:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 136:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 137:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 140:Core/Src/main.c ****   {
 141:Core/Src/main.c ****     Error_Handler();
 142:Core/Src/main.c ****   }
 143:Core/Src/main.c **** }
 144:Core/Src/main.c **** 
 145:Core/Src/main.c **** /**
ARM GAS  C:\PROGRA~1\KMSpico\temp\ccLfaRtv.s 			page 4


 146:Core/Src/main.c ****   * @brief GPIO Initialization Function
 147:Core/Src/main.c ****   * @param None
 148:Core/Src/main.c ****   * @retval None
 149:Core/Src/main.c ****   */
 150:Core/Src/main.c **** static void MX_GPIO_Init(void)
 151:Core/Src/main.c **** {
  28              		.loc 1 151 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 152:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 152 3 view .LVU1
  42              		.loc 1 152 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 155:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  49              		.loc 1 155 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 155 3 view .LVU4
  52 0010 0094     		str	r4, [sp]
  53              		.loc 1 155 3 view .LVU5
  54 0012 1D4B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F01002 		orr	r2, r2, #16
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 155 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F01002 		and	r2, r2, #16
  61 0022 0092     		str	r2, [sp]
  62              		.loc 1 155 3 view .LVU7
  63 0024 009A     		ldr	r2, [sp]
  64              	.LBE4:
  65              		.loc 1 155 3 view .LVU8
 156:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  66              		.loc 1 156 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 156 3 view .LVU10
  69 0026 0194     		str	r4, [sp, #4]
  70              		.loc 1 156 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F00802 		orr	r2, r2, #8
  73 002e 1A63     		str	r2, [r3, #48]
ARM GAS  C:\PROGRA~1\KMSpico\temp\ccLfaRtv.s 			page 5


  74              		.loc 1 156 3 view .LVU12
  75 0030 1A6B     		ldr	r2, [r3, #48]
  76 0032 02F00802 		and	r2, r2, #8
  77 0036 0192     		str	r2, [sp, #4]
  78              		.loc 1 156 3 view .LVU13
  79 0038 019A     		ldr	r2, [sp, #4]
  80              	.LBE5:
  81              		.loc 1 156 3 view .LVU14
 157:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  82              		.loc 1 157 3 view .LVU15
  83              	.LBB6:
  84              		.loc 1 157 3 view .LVU16
  85 003a 0294     		str	r4, [sp, #8]
  86              		.loc 1 157 3 view .LVU17
  87 003c 1A6B     		ldr	r2, [r3, #48]
  88 003e 42F00102 		orr	r2, r2, #1
  89 0042 1A63     		str	r2, [r3, #48]
  90              		.loc 1 157 3 view .LVU18
  91 0044 1B6B     		ldr	r3, [r3, #48]
  92 0046 03F00103 		and	r3, r3, #1
  93 004a 0293     		str	r3, [sp, #8]
  94              		.loc 1 157 3 view .LVU19
  95 004c 029B     		ldr	r3, [sp, #8]
  96              	.LBE6:
  97              		.loc 1 157 3 view .LVU20
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 160:Core/Src/main.c ****   HAL_GPIO_WritePin(LD1R_GPIO_Port, LD1R_Pin, GPIO_PIN_RESET);
  98              		.loc 1 160 3 view .LVU21
  99 004e 0F4D     		ldr	r5, .L3+4
 100 0050 2246     		mov	r2, r4
 101 0052 4FF48051 		mov	r1, #4096
 102 0056 2846     		mov	r0, r5
 103 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
 104              	.LVL0:
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /*Configure GPIO pin : SW1_Pin */
 163:Core/Src/main.c ****   GPIO_InitStruct.Pin = SW1_Pin;
 105              		.loc 1 163 3 view .LVU22
 106              		.loc 1 163 23 is_stmt 0 view .LVU23
 107 005c 0823     		movs	r3, #8
 108 005e 0393     		str	r3, [sp, #12]
 164:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 109              		.loc 1 164 3 is_stmt 1 view .LVU24
 110              		.loc 1 164 24 is_stmt 0 view .LVU25
 111 0060 0494     		str	r4, [sp, #16]
 165:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 112              		.loc 1 165 3 is_stmt 1 view .LVU26
 113              		.loc 1 165 24 is_stmt 0 view .LVU27
 114 0062 0594     		str	r4, [sp, #20]
 166:Core/Src/main.c ****   HAL_GPIO_Init(SW1_GPIO_Port, &GPIO_InitStruct);
 115              		.loc 1 166 3 is_stmt 1 view .LVU28
 116 0064 03A9     		add	r1, sp, #12
 117 0066 0A48     		ldr	r0, .L3+8
 118 0068 FFF7FEFF 		bl	HAL_GPIO_Init
 119              	.LVL1:
 167:Core/Src/main.c **** 
ARM GAS  C:\PROGRA~1\KMSpico\temp\ccLfaRtv.s 			page 6


 168:Core/Src/main.c ****   /*Configure GPIO pin : LD1R_Pin */
 169:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD1R_Pin;
 120              		.loc 1 169 3 view .LVU29
 121              		.loc 1 169 23 is_stmt 0 view .LVU30
 122 006c 4FF48053 		mov	r3, #4096
 123 0070 0393     		str	r3, [sp, #12]
 170:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 124              		.loc 1 170 3 is_stmt 1 view .LVU31
 125              		.loc 1 170 24 is_stmt 0 view .LVU32
 126 0072 0123     		movs	r3, #1
 127 0074 0493     		str	r3, [sp, #16]
 171:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 128              		.loc 1 171 3 is_stmt 1 view .LVU33
 129              		.loc 1 171 24 is_stmt 0 view .LVU34
 130 0076 0594     		str	r4, [sp, #20]
 172:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 131              		.loc 1 172 3 is_stmt 1 view .LVU35
 132              		.loc 1 172 25 is_stmt 0 view .LVU36
 133 0078 0694     		str	r4, [sp, #24]
 173:Core/Src/main.c ****   HAL_GPIO_Init(LD1R_GPIO_Port, &GPIO_InitStruct);
 134              		.loc 1 173 3 is_stmt 1 view .LVU37
 135 007a 03A9     		add	r1, sp, #12
 136 007c 2846     		mov	r0, r5
 137 007e FFF7FEFF 		bl	HAL_GPIO_Init
 138              	.LVL2:
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** }
 139              		.loc 1 175 1 is_stmt 0 view .LVU38
 140 0082 09B0     		add	sp, sp, #36
 141              	.LCFI2:
 142              		.cfi_def_cfa_offset 12
 143              		@ sp needed
 144 0084 30BD     		pop	{r4, r5, pc}
 145              	.L4:
 146 0086 00BF     		.align	2
 147              	.L3:
 148 0088 00380240 		.word	1073887232
 149 008c 000C0240 		.word	1073875968
 150 0090 00100240 		.word	1073876992
 151              		.cfi_endproc
 152              	.LFE132:
 154              		.section	.text.Error_Handler,"ax",%progbits
 155              		.align	1
 156              		.global	Error_Handler
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	Error_Handler:
 162              	.LFB133:
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 178:Core/Src/main.c **** 
 179:Core/Src/main.c **** /* USER CODE END 4 */
 180:Core/Src/main.c **** 
 181:Core/Src/main.c **** /**
 182:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 183:Core/Src/main.c ****   * @retval None
ARM GAS  C:\PROGRA~1\KMSpico\temp\ccLfaRtv.s 			page 7


 184:Core/Src/main.c ****   */
 185:Core/Src/main.c **** void Error_Handler(void)
 186:Core/Src/main.c **** {
 163              		.loc 1 186 1 is_stmt 1 view -0
 164              		.cfi_startproc
 165              		@ Volatile: function does not return.
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              		@ link register save eliminated.
 187:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 188:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 189:Core/Src/main.c ****   __disable_irq();
 169              		.loc 1 189 3 view .LVU40
 170              	.LBB7:
 171              	.LBI7:
 172              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
ARM GAS  C:\PROGRA~1\KMSpico\temp\ccLfaRtv.s 			page 8


  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
ARM GAS  C:\PROGRA~1\KMSpico\temp\ccLfaRtv.s 			page 9


  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 173              		.loc 2 140 27 view .LVU41
 174              	.LBB8:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 175              		.loc 2 142 3 view .LVU42
 176              		.syntax unified
 177              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 178 0000 72B6     		cpsid i
 179              	@ 0 "" 2
 180              		.thumb
 181              		.syntax unified
 182              	.L6:
 183              	.LBE8:
 184              	.LBE7:
 190:Core/Src/main.c ****   while (1)
ARM GAS  C:\PROGRA~1\KMSpico\temp\ccLfaRtv.s 			page 10


 185              		.loc 1 190 3 discriminator 1 view .LVU43
 191:Core/Src/main.c ****   {
 192:Core/Src/main.c ****   }
 186              		.loc 1 192 3 discriminator 1 view .LVU44
 190:Core/Src/main.c ****   while (1)
 187              		.loc 1 190 9 discriminator 1 view .LVU45
 188 0002 FEE7     		b	.L6
 189              		.cfi_endproc
 190              	.LFE133:
 192              		.section	.text.SystemClock_Config,"ax",%progbits
 193              		.align	1
 194              		.global	SystemClock_Config
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 199              	SystemClock_Config:
 200              	.LFB131:
 111:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 201              		.loc 1 111 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 80
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 00B5     		push	{lr}
 206              	.LCFI3:
 207              		.cfi_def_cfa_offset 4
 208              		.cfi_offset 14, -4
 209 0002 95B0     		sub	sp, sp, #84
 210              	.LCFI4:
 211              		.cfi_def_cfa_offset 88
 112:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 212              		.loc 1 112 3 view .LVU47
 112:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 213              		.loc 1 112 22 is_stmt 0 view .LVU48
 214 0004 3022     		movs	r2, #48
 215 0006 0021     		movs	r1, #0
 216 0008 08A8     		add	r0, sp, #32
 217 000a FFF7FEFF 		bl	memset
 218              	.LVL3:
 113:Core/Src/main.c **** 
 219              		.loc 1 113 3 is_stmt 1 view .LVU49
 113:Core/Src/main.c **** 
 220              		.loc 1 113 22 is_stmt 0 view .LVU50
 221 000e 0023     		movs	r3, #0
 222 0010 0393     		str	r3, [sp, #12]
 223 0012 0493     		str	r3, [sp, #16]
 224 0014 0593     		str	r3, [sp, #20]
 225 0016 0693     		str	r3, [sp, #24]
 226 0018 0793     		str	r3, [sp, #28]
 117:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 227              		.loc 1 117 3 is_stmt 1 view .LVU51
 228              	.LBB9:
 117:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 229              		.loc 1 117 3 view .LVU52
 230 001a 0193     		str	r3, [sp, #4]
 117:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 231              		.loc 1 117 3 view .LVU53
 232 001c 184A     		ldr	r2, .L13
ARM GAS  C:\PROGRA~1\KMSpico\temp\ccLfaRtv.s 			page 11


 233 001e 116C     		ldr	r1, [r2, #64]
 234 0020 41F08051 		orr	r1, r1, #268435456
 235 0024 1164     		str	r1, [r2, #64]
 117:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 236              		.loc 1 117 3 view .LVU54
 237 0026 126C     		ldr	r2, [r2, #64]
 238 0028 02F08052 		and	r2, r2, #268435456
 239 002c 0192     		str	r2, [sp, #4]
 117:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 240              		.loc 1 117 3 view .LVU55
 241 002e 019A     		ldr	r2, [sp, #4]
 242              	.LBE9:
 117:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 243              		.loc 1 117 3 view .LVU56
 118:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 244              		.loc 1 118 3 view .LVU57
 245              	.LBB10:
 118:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 246              		.loc 1 118 3 view .LVU58
 247 0030 0293     		str	r3, [sp, #8]
 118:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 248              		.loc 1 118 3 view .LVU59
 249 0032 144A     		ldr	r2, .L13+4
 250 0034 1168     		ldr	r1, [r2]
 251 0036 41F48041 		orr	r1, r1, #16384
 252 003a 1160     		str	r1, [r2]
 118:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 253              		.loc 1 118 3 view .LVU60
 254 003c 1268     		ldr	r2, [r2]
 255 003e 02F48042 		and	r2, r2, #16384
 256 0042 0292     		str	r2, [sp, #8]
 118:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 257              		.loc 1 118 3 view .LVU61
 258 0044 029A     		ldr	r2, [sp, #8]
 259              	.LBE10:
 118:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 260              		.loc 1 118 3 view .LVU62
 122:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 261              		.loc 1 122 3 view .LVU63
 122:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 262              		.loc 1 122 36 is_stmt 0 view .LVU64
 263 0046 0222     		movs	r2, #2
 264 0048 0892     		str	r2, [sp, #32]
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 265              		.loc 1 123 3 is_stmt 1 view .LVU65
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 266              		.loc 1 123 30 is_stmt 0 view .LVU66
 267 004a 0122     		movs	r2, #1
 268 004c 0B92     		str	r2, [sp, #44]
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 269              		.loc 1 124 3 is_stmt 1 view .LVU67
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 270              		.loc 1 124 41 is_stmt 0 view .LVU68
 271 004e 1022     		movs	r2, #16
 272 0050 0C92     		str	r2, [sp, #48]
 125:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 273              		.loc 1 125 3 is_stmt 1 view .LVU69
ARM GAS  C:\PROGRA~1\KMSpico\temp\ccLfaRtv.s 			page 12


 125:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 274              		.loc 1 125 34 is_stmt 0 view .LVU70
 275 0052 0E93     		str	r3, [sp, #56]
 126:Core/Src/main.c ****   {
 276              		.loc 1 126 3 is_stmt 1 view .LVU71
 126:Core/Src/main.c ****   {
 277              		.loc 1 126 7 is_stmt 0 view .LVU72
 278 0054 08A8     		add	r0, sp, #32
 279 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 280              	.LVL4:
 126:Core/Src/main.c ****   {
 281              		.loc 1 126 6 view .LVU73
 282 005a 68B9     		cbnz	r0, .L11
 132:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 283              		.loc 1 132 3 is_stmt 1 view .LVU74
 132:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 284              		.loc 1 132 31 is_stmt 0 view .LVU75
 285 005c 0F23     		movs	r3, #15
 286 005e 0393     		str	r3, [sp, #12]
 134:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 287              		.loc 1 134 3 is_stmt 1 view .LVU76
 134:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 288              		.loc 1 134 34 is_stmt 0 view .LVU77
 289 0060 0021     		movs	r1, #0
 290 0062 0491     		str	r1, [sp, #16]
 135:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 291              		.loc 1 135 3 is_stmt 1 view .LVU78
 135:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 292              		.loc 1 135 35 is_stmt 0 view .LVU79
 293 0064 0591     		str	r1, [sp, #20]
 136:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 294              		.loc 1 136 3 is_stmt 1 view .LVU80
 136:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 295              		.loc 1 136 36 is_stmt 0 view .LVU81
 296 0066 0691     		str	r1, [sp, #24]
 137:Core/Src/main.c **** 
 297              		.loc 1 137 3 is_stmt 1 view .LVU82
 137:Core/Src/main.c **** 
 298              		.loc 1 137 36 is_stmt 0 view .LVU83
 299 0068 0791     		str	r1, [sp, #28]
 139:Core/Src/main.c ****   {
 300              		.loc 1 139 3 is_stmt 1 view .LVU84
 139:Core/Src/main.c ****   {
 301              		.loc 1 139 7 is_stmt 0 view .LVU85
 302 006a 03A8     		add	r0, sp, #12
 303 006c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 304              	.LVL5:
 139:Core/Src/main.c ****   {
 305              		.loc 1 139 6 view .LVU86
 306 0070 20B9     		cbnz	r0, .L12
 143:Core/Src/main.c **** 
 307              		.loc 1 143 1 view .LVU87
 308 0072 15B0     		add	sp, sp, #84
 309              	.LCFI5:
 310              		.cfi_remember_state
 311              		.cfi_def_cfa_offset 4
 312              		@ sp needed
ARM GAS  C:\PROGRA~1\KMSpico\temp\ccLfaRtv.s 			page 13


 313 0074 5DF804FB 		ldr	pc, [sp], #4
 314              	.L11:
 315              	.LCFI6:
 316              		.cfi_restore_state
 128:Core/Src/main.c ****   }
 317              		.loc 1 128 5 is_stmt 1 view .LVU88
 318 0078 FFF7FEFF 		bl	Error_Handler
 319              	.LVL6:
 320              	.L12:
 141:Core/Src/main.c ****   }
 321              		.loc 1 141 5 view .LVU89
 322 007c FFF7FEFF 		bl	Error_Handler
 323              	.LVL7:
 324              	.L14:
 325              		.align	2
 326              	.L13:
 327 0080 00380240 		.word	1073887232
 328 0084 00700040 		.word	1073770496
 329              		.cfi_endproc
 330              	.LFE131:
 332              		.section	.text.main,"ax",%progbits
 333              		.align	1
 334              		.global	main
 335              		.syntax unified
 336              		.thumb
 337              		.thumb_func
 339              	main:
 340              	.LFB130:
  64:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 341              		.loc 1 64 1 view -0
 342              		.cfi_startproc
 343              		@ Volatile: function does not return.
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 0, uses_anonymous_args = 0
 346 0000 08B5     		push	{r3, lr}
 347              	.LCFI7:
 348              		.cfi_def_cfa_offset 8
 349              		.cfi_offset 3, -8
 350              		.cfi_offset 14, -4
  72:Core/Src/main.c **** 
 351              		.loc 1 72 3 view .LVU91
 352 0002 FFF7FEFF 		bl	HAL_Init
 353              	.LVL8:
  79:Core/Src/main.c **** 
 354              		.loc 1 79 3 view .LVU92
 355 0006 FFF7FEFF 		bl	SystemClock_Config
 356              	.LVL9:
  86:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 357              		.loc 1 86 3 view .LVU93
 358 000a FFF7FEFF 		bl	MX_GPIO_Init
 359              	.LVL10:
 360              	.L16:
  93:Core/Src/main.c ****   {
 361              		.loc 1 93 3 view .LVU94
  98:Core/Src/main.c ****       HAL_GPIO_TogglePin(LD1R_GPIO_Port, LD1R_Pin);
 362              		.loc 1 98 5 view .LVU95
  98:Core/Src/main.c ****       HAL_GPIO_TogglePin(LD1R_GPIO_Port, LD1R_Pin);
ARM GAS  C:\PROGRA~1\KMSpico\temp\ccLfaRtv.s 			page 14


 363              		.loc 1 98 9 is_stmt 0 view .LVU96
 364 000e 0821     		movs	r1, #8
 365 0010 0548     		ldr	r0, .L19
 366 0012 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 367              	.LVL11:
  98:Core/Src/main.c ****       HAL_GPIO_TogglePin(LD1R_GPIO_Port, LD1R_Pin);
 368              		.loc 1 98 8 view .LVU97
 369 0016 0028     		cmp	r0, #0
 370 0018 F9D0     		beq	.L16
  99:Core/Src/main.c ****     }
 371              		.loc 1 99 7 is_stmt 1 view .LVU98
 372 001a 4FF48051 		mov	r1, #4096
 373 001e 0348     		ldr	r0, .L19+4
 374 0020 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 375              	.LVL12:
 376 0024 F3E7     		b	.L16
 377              	.L20:
 378 0026 00BF     		.align	2
 379              	.L19:
 380 0028 00100240 		.word	1073876992
 381 002c 000C0240 		.word	1073875968
 382              		.cfi_endproc
 383              	.LFE130:
 385              		.text
 386              	.Letext0:
 387              		.file 3 "c:\\dev\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\machine\\_default_types.
 388              		.file 4 "c:\\dev\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 389              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 390              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 391              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 392              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 393              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 394              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 395              		.file 11 "<built-in>"
ARM GAS  C:\PROGRA~1\KMSpico\temp\ccLfaRtv.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\PROGRA~1\KMSpico\temp\ccLfaRtv.s:20     .text.MX_GPIO_Init:00000000 $t
C:\PROGRA~1\KMSpico\temp\ccLfaRtv.s:25     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\PROGRA~1\KMSpico\temp\ccLfaRtv.s:148    .text.MX_GPIO_Init:00000088 $d
C:\PROGRA~1\KMSpico\temp\ccLfaRtv.s:155    .text.Error_Handler:00000000 $t
C:\PROGRA~1\KMSpico\temp\ccLfaRtv.s:161    .text.Error_Handler:00000000 Error_Handler
C:\PROGRA~1\KMSpico\temp\ccLfaRtv.s:193    .text.SystemClock_Config:00000000 $t
C:\PROGRA~1\KMSpico\temp\ccLfaRtv.s:199    .text.SystemClock_Config:00000000 SystemClock_Config
C:\PROGRA~1\KMSpico\temp\ccLfaRtv.s:327    .text.SystemClock_Config:00000080 $d
C:\PROGRA~1\KMSpico\temp\ccLfaRtv.s:333    .text.main:00000000 $t
C:\PROGRA~1\KMSpico\temp\ccLfaRtv.s:339    .text.main:00000000 main
C:\PROGRA~1\KMSpico\temp\ccLfaRtv.s:380    .text.main:00000028 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GPIO_ReadPin
HAL_GPIO_TogglePin
